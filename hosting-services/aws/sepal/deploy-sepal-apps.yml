- name: Configure Sepal-Apps instance
  hosts: all
  user: ec2-user
  become: yes
  gather_facts: true

  pre_tasks:
    - set_fact:
        SYSLOG_ADDRESS: "udp://{{ ec2_private_ip_address }}"

    # bash prompt
    - name: Set bash prompt
      blockinfile:
        path: /etc/profile
        block: |
          # Bash prompt
          PS1='{{ lookup('env', 'BASH_PROMPT_APPS') }}'

    # set locale
    - name: Set locale
      lineinfile:
        path: /etc/environment
        line: "{{ item }}"
      with_items:
        - "LANG=en_US.utf-8"
        - "LC_ALL=en_US.utf-8"

    - file: path="/data/sepal/etc" state=directory
    - template: src="./aws.properties" dest=/data/sepal/etc/aws.properties

    # rsyslog
    - name: Copy rsyslog.conf
      template: src="rsyslog.conf" dest=/etc/rsyslog.conf

    - name: Start rsyslog
      service: name=rsyslog state=restarted

    # docker
    - name: Create filesystem on Docker volume
      filesystem:
        fstype: xfs
        dev: /dev/sdb

    - name: Mount Docker volume
      mount:
        path: /var/lib/docker
        src: /dev/sdb
        fstype: xfs
        state: mounted

    - name: Create docker-registry certificate dir
      file:
        path: "/etc/docker/certs.d/{{ lookup('env', 'DOCKER_REGISTRY_HOST') }}"
        state: directory

    - name: Copy docker-registry certificate
      copy:
        src: "{{ CONFIG_HOME }}/certificates/docker-registry.crt"
        dest: "/etc/docker/certs.d/{{ lookup('env', 'DOCKER_REGISTRY_HOST') }}/ca.crt"

    - name: Install docker
      yum:
        name:
          - docker
        state: present

    - name: Create /etc/docker
      file:
        path: "/etc/docker"
        state: directory

    - name: Copy /etc/docker/daemon.json
      template: src=docker/apps-daemon.json dest=/etc/docker/daemon.json
        
    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker

    - name: Enable docker
      systemd:
        name: docker
        state: started
        enabled: yes
        masked: no

    - name: pip install urllib3
      pip:
        name: urllib3==1.26.18
        executable: pip3

    - name: pip install requests
      pip:
        name: requests
        executable: pip3

    - docker_network:
        name: sepal
        ipam_config:
          - subnet: 172.20.0.0/16
            iprange: 172.20.0.0/24

    - file: path="/usr/local/lib/docker/cli-plugins" state=directory
    - uri:
        url: https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: +x
        status_code: [200, 304]

    - file: path="/etc/sepal/env.d" state=directory
    - name: Copy env file to env-config
      copy:
        src: "{{ env_file }}"
        dest: "/etc/sepal/env.d/env-config"

    - name: Creating env-current file
      copy:
        dest: "/etc/sepal/env.d/env-current"
        content: |
          SEPAL_VERSION={{ VERSION }}
          SYSLOG_ADDRESS={{ SYSLOG_ADDRESS }}

    - name: Assemble a single env file
      ansible.builtin.assemble:
        src: /etc/sepal/env.d
        dest: /etc/sepal/env

    - name: Copy logger docker compose file
      copy:
        src: "{{ lookup('env', 'PROJECT_DIR') }}/modules/docker-compose.logger.yml"
        dest: "/var/lib/sepal/modules/"

  roles:
    # - { role: live-patching }
    - { role: docker-login }
    - { role: run-module, module: logger }
    - { role: run-module, module: app-launcher }
