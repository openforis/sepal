- name: Setup AWS
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    # Sepal-Storage

    - name: Create Sepal-Storage security group
      ec2_group:
        name: "Sepal-Storage"
        description: The Sepal-Storage Security Group
        region: "{{ lookup('env', 'AWS_REGION') }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 168.202.0.0/16
            rule_desc: 'FAO'
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ local_ip_address }}/32"
            rule_desc: 'Deployer'
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
      register: sepal_storage_group

    - name: Provision Sepal-Storage instance
      ec2_instance:
        key_name: "{{ lookup('env', 'AWS_REGION') }}"
        security_groups: 
          - "Sepal-Storage"
        instance_type: m5a.large
        image_id: "{{ lookup('env', 'AWS_AMI') }}"
        region: "{{ lookup('env', 'AWS_REGION') }}"
        availability_zone: "{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}"
        state: started
        wait: true
        filters:
          tag:Name: "Sepal-Storage - {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          tag:Type: "SepalStorage"
          tag:Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          instance-state-name: running
        exact_count: 1
        purge_tags: false
        tags:
          Type: "SepalStorage"
          Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
        volumes:
          - device_name: /dev/xvda
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 32
          - device_name: /dev/sdb
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 32
      register: started_ec2_sepal_storage

    - ec2_instance_info:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        filters:
          tag:Type: "SepalStorage"
          tag:Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          instance-state-name: running
      register: ec2_sepal_storage

    - set_fact:
        sepal_storage_ip: "{{ ec2_sepal_storage.instances[0].public_ip_address }}"

    # Sepal

    - name: Create Sepal security group
      ec2_group:
        name: "Sepal"
        description: The Sepal Security Group
        region: "{{ lookup('env', 'AWS_REGION') }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 168.202.0.0/16
            rule_desc: 'FAO'
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: 'HTTP'
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
            rule_desc: 'HTTPS'
          - proto: udp
            from_port: 514
            to_port: 514
            cidr_ip: 172.31.0.0/16
            rule_desc: 'syslog'
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 172.31.0.0/16
            rule_desc: 'Subnet'
          - proto: tcp
            from_port: 5672
            to_port: 5672
            cidr_ip: "{{ sepal_storage_ip }}/32"
            rule_desc: 'Sepal-Storage'
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ local_ip_address }}/32"
            rule_desc: 'Deployer'
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0

    - amazon.aws.ec2_eni:
        name: "Sepal {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
        region: "{{ lookup('env', 'AWS_REGION') }}"
        subnet_id: "{{ lookup('env', 'AWS_SUBNET_ID') }}"
        security_groups: 
          - "Sepal"
        allow_reassignment: true
        secondary_private_ip_address_count: 1
        delete_on_termination: true
      register: sepal_eni

    - name: Provision Sepal instance
      ec2_instance:
        key_name: "{{ lookup('env', 'AWS_REGION') }}"
        # security_groups: 
        #   - "Sepal"
        instance_type: "{{ lookup('env', 'AWS_INSTANCE_TYPE') }}"
        image_id: "{{ lookup('env', 'AWS_AMI') }}"
        region: "{{ lookup('env', 'AWS_REGION') }}"
        availability_zone: "{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}"
        state: running
        wait: true
        exact_count: 1
        filters:
          tag:Type: Sepal
          tag:Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          instance-state-name: running
        purge_tags: false
        tags:
          Name: "Sepal - {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          Type: Sepal
          Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
        network:
          interfaces:
            - id: "{{ sepal_eni.interface.id }}" 
        ebs_optimized: true
        volumes:
          - device_name: /dev/xvda
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 10
          - device_name: /dev/sdf # /data
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 200
          - device_name: /dev/sdg # /var/lib/docker
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 50
          - device_name: /dev/sdh # /var/log
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 10

    - ec2_instance_info:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        filters:
          tag:Type: "Sepal"
          tag:Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          instance-state-name: running
      register: ec2_sepal

    - set_fact:
        sepal_ip: "{{ ec2_sepal.instances[0].public_ip_address }}"

    # Sepal-Apps

    - name: Create Sepal-Apps security group
      ec2_group:
        name: "Sepal-Apps"
        description: The Sepal-Apps Security Group
        region: "{{ lookup('env', 'AWS_REGION') }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "{{ sepal_ip }}/32"
            rule_desc: 'Sepal'
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 168.202.0.0/16
            rule_desc: 'FAO'
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ local_ip_address }}/32"
            rule_desc: 'Deployer'
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
      register: sepal_apps_group

    - name: Provision Sepal-Apps instance
      ec2_instance:
        key_name: "{{ lookup('env', 'AWS_REGION') }}"
        security_groups: 
          - "Sepal-Apps"
        instance_type: t3a.medium
        image_id: "{{ lookup('env', 'AWS_AMI') }}"
        region: "{{ lookup('env', 'AWS_REGION') }}"
        availability_zone: "{{ lookup('env', 'AWS_AVAILABILITY_ZONE') }}"
        state: running
        wait: true
        exact_count: 1
        filters:
          tag:Type: "SepalApps"
          tag:Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          instance-state-name: running
        purge_tags: false
        tags:
          Name: "Sepal-Apps - {{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          Type: SepalApps
          Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
        ebs_optimized: true
        volumes:
          - device_name: /dev/xvda
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 32
          - device_name: /dev/sdb
            ebs:
              delete_on_termination: false
              volume_type: gp3
              volume_size: 32
      register: started_ec2_sepal_apps

    - ec2_instance_info:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        filters:
          tag:Type: "SepalApps"
          tag:Environment: "{{ lookup('env', 'DEPLOY_ENVIRONMENT') }}"
          instance-state-name: running
      register: ec2_sepal_apps

    - set_fact:
        sepal_apps_ip: "{{ ec2_sepal_apps.instances[0].public_ip_address }}"

    - name: Add DNS entry for Sepal-Apps instance
      amazon.aws.route53:
        state: present
        zone: "{{ lookup('env', 'AWS_ROUTE_53_ZONE') }}"
        record: "{{ lookup('env', 'SEPAL_APPS_HOST') }}"
        type: A
        value: "{{ sepal_apps_ip }}"
        wait: true
            
    # Assign Sepal Instance Volume tags
    - amazon.aws.ec2_tag:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        resource: "{{ ec2_sepal.instances[0].block_device_mappings[0].ebs.volume_id }}"
        tags:
          Name: "Sepal {{ lookup('env', 'DEPLOY_ENVIRONMENT') }} Root"

    - amazon.aws.ec2_tag:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        resource: "{{ ec2_sepal.instances[0].block_device_mappings[1].ebs.volume_id }}"
        tags:
          Name: "Sepal {{ lookup('env', 'DEPLOY_ENVIRONMENT') }} Data"

    - amazon.aws.ec2_tag:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        resource: "{{ ec2_sepal.instances[0].block_device_mappings[2].ebs.volume_id }}"
        tags:
          Name: "Sepal {{ lookup('env', 'DEPLOY_ENVIRONMENT') }} Docker"

    - amazon.aws.ec2_tag:
        region: "{{ lookup('env', 'AWS_REGION') }}"
        resource: "{{ ec2_sepal.instances[0].block_device_mappings[3].ebs.volume_id }}"
        tags:
          Name: "Sepal {{ lookup('env', 'DEPLOY_ENVIRONMENT') }} Log"

    # Wait for SSH to be available on instances
    - name: Wait for SSH to be available on Sepal
      local_action: wait_for host="{{ item.public_ip_address }}"
                    port=22
                    state="started"
      with_items: "{{ ec2_sepal.instances }}"

    - name: Wait for SSH to be available on Sepal-Apps
      local_action: wait_for host="{{ item.public_ip_address }}"
                    port=22
                    state="started"
      with_items: "{{ ec2_sepal_apps.instances }}"

    - name: Wait for SSH to be available on Sepal-Storage
      local_action: wait_for host="{{ item.public_ip_address }}"
                    port=22
                    state="started"
      with_items: "{{ ec2_sepal_storage.instances }}"
